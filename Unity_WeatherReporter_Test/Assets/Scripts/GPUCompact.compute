// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel ReadTexture

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<half4> _CTex_F01;
RWStructuredBuffer<uint4> _CDatas_F01;
uint _CDatas_F01_Width_GroupCount;



[numthreads(32,32,1)]
void ReadTexture (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    //Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
    
    uint index = id.y * 32* _CDatas_F01_Width_GroupCount + id.x;

    uint x = _CTex_F01[id.xy].x * 255* _CDatas_F01_Width_GroupCount;
    uint y = _CTex_F01[id.xy].y * 255* _CDatas_F01_Width_GroupCount;
    uint z = _CTex_F01[id.xy].z * 255* _CDatas_F01_Width_GroupCount;
    uint w = _CTex_F01[id.xy].w * 255* _CDatas_F01_Width_GroupCount;
    
    _CDatas_F01[index] = uint4(x,y,z,w);
}
